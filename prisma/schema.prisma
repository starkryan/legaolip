generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Device {
  id           String        @id @default(cuid())
  deviceId     String        @unique
  phoneNumber  String?
  simSlots     Json?
  batteryLevel Int?
  deviceStatus String        @default("offline")
  lastSeen     DateTime
  registeredAt DateTime      @default(now())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  phoneNumbers PhoneNumber[]
  smsMessages  SmsMessage[]

  @@map("devices")
}

model PhoneNumber {
  id           String   @id @default(cuid())
  deviceId     String
  phoneNumber  String
  slotIndex    Int?
  carrierName  String?
  operatorName String?
  signalStatus String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  device       Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@unique([deviceId, phoneNumber])
  @@map("phone_numbers")
}

model SmsMessage {
  id         String    @id @default(cuid())
  deviceId   String
  sender     String?
  recipient  String?
  message    String
  timestamp  DateTime?
  receivedAt DateTime?
  sentAt     DateTime?
  status     String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  slotIndex  Int?
  device     Device    @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@map("sms_messages")
}
